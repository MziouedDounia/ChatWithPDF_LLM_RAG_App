{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dounia\\\\ChatWithPDF_LLM_RAG_App\\\\frontend\\\\src\\\\components\\\\SpeechToText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Input from './Input'; // Import your Input component\nimport './speechToText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = ({\n  setTranscript\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = new SpeechRecognition();\n  recognition.continuous = true;\n  recognition.interimResults = true;\n  recognition.lang = \"en-US\"; // Define language as French\n\n  useEffect(() => {\n    recognition.onresult = event => {\n      let finalTranscript = \"\";\n      let interimTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcriptPiece = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcriptPiece;\n        } else {\n          interimTranscript += transcriptPiece;\n        }\n      }\n\n      // Update the transcript in the parent component using setTranscript\n      setTranscript(prevTranscript => prevTranscript + finalTranscript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Erreur de reconnaissance vocale : \", event.error);\n    };\n  }, [recognition, setTranscript]); // Make sure setTranscript is in the dependency array\n\n  const handleRecordingToggle = () => {\n    if (isRecording) {\n      recognition.stop();\n      setIsRecording(false);\n    } else {\n      recognition.start();\n      setIsRecording(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"recButton\",\n    className: isRecording ? \"Rec\" : \"notRec\",\n    onClick: handleRecordingToggle,\n    children: isRecording ? \"Recording\" : \"Not Recording\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(SpeechToText, \"VaKoVa7WGWq3eWYUqqCMmE7SDo0=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","Input","jsxDEV","_jsxDEV","SpeechToText","setTranscript","_s","isRecording","setIsRecording","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onresult","event","finalTranscript","interimTranscript","i","resultIndex","results","length","transcriptPiece","transcript","isFinal","prevTranscript","onerror","console","error","handleRecordingToggle","stop","start","id","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dounia/ChatWithPDF_LLM_RAG_App/frontend/src/components/SpeechToText.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Input from './Input'; // Import your Input component\r\nimport './speechToText.css'; \r\n\r\nconst SpeechToText = ({ setTranscript }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n  \r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    \r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = \"en-US\"; // Define language as French\r\n  \r\n    useEffect(() => {\r\n      recognition.onresult = (event) => {\r\n        let finalTranscript = \"\";\r\n        let interimTranscript = \"\";\r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n          const transcriptPiece = event.results[i][0].transcript;\r\n          if (event.results[i].isFinal) {\r\n            finalTranscript += transcriptPiece;\r\n          } else {\r\n            interimTranscript += transcriptPiece;\r\n          }\r\n        }\r\n  \r\n        // Update the transcript in the parent component using setTranscript\r\n        setTranscript((prevTranscript) => prevTranscript + finalTranscript);\r\n      };\r\n  \r\n      recognition.onerror = (event) => {\r\n        console.error(\"Erreur de reconnaissance vocale : \", event.error);\r\n      };\r\n    }, [recognition, setTranscript]); // Make sure setTranscript is in the dependency array\r\n  \r\n    const handleRecordingToggle = () => {\r\n      if (isRecording) {\r\n        recognition.stop();\r\n        setIsRecording(false);\r\n      } else {\r\n        recognition.start();\r\n        setIsRecording(true);\r\n      }\r\n    };\r\n  \r\n    return (\r\n     \r\n        <button\r\n          id=\"recButton\"\r\n          className={isRecording ? \"Rec\" : \"notRec\"}\r\n          onClick={handleRecordingToggle}\r\n        >\r\n          {isRecording ? \"Recording\" : \"Not Recording\"}\r\n        </button>\r\n        \r\n \r\n    );\r\n  };\r\n  \r\n  export default SpeechToText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EACpF,MAAMC,WAAW,GAAG,IAAIH,iBAAiB,CAAC,CAAC;EAE3CG,WAAW,CAACC,UAAU,GAAG,IAAI;EAC7BD,WAAW,CAACE,cAAc,GAAG,IAAI;EACjCF,WAAW,CAACG,IAAI,GAAG,OAAO,CAAC,CAAC;;EAE5Bf,SAAS,CAAC,MAAM;IACdY,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;MAChC,IAAIC,eAAe,GAAG,EAAE;MACxB,IAAIC,iBAAiB,GAAG,EAAE;MAC1B,KAAK,IAAIC,CAAC,GAAGH,KAAK,CAACI,WAAW,EAAED,CAAC,GAAGH,KAAK,CAACK,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC7D,MAAMI,eAAe,GAAGP,KAAK,CAACK,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,UAAU;QACtD,IAAIR,KAAK,CAACK,OAAO,CAACF,CAAC,CAAC,CAACM,OAAO,EAAE;UAC5BR,eAAe,IAAIM,eAAe;QACpC,CAAC,MAAM;UACLL,iBAAiB,IAAIK,eAAe;QACtC;MACF;;MAEA;MACAnB,aAAa,CAAEsB,cAAc,IAAKA,cAAc,GAAGT,eAAe,CAAC;IACrE,CAAC;IAEDN,WAAW,CAACgB,OAAO,GAAIX,KAAK,IAAK;MAC/BY,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEb,KAAK,CAACa,KAAK,CAAC;IAClE,CAAC;EACH,CAAC,EAAE,CAAClB,WAAW,EAAEP,aAAa,CAAC,CAAC,CAAC,CAAC;;EAElC,MAAM0B,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIxB,WAAW,EAAE;MACfK,WAAW,CAACoB,IAAI,CAAC,CAAC;MAClBxB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACLI,WAAW,CAACqB,KAAK,CAAC,CAAC;MACnBzB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBAEIL,OAAA;IACE+B,EAAE,EAAC,WAAW;IACdC,SAAS,EAAE5B,WAAW,GAAG,KAAK,GAAG,QAAS;IAC1C6B,OAAO,EAAEL,qBAAsB;IAAAM,QAAA,EAE9B9B,WAAW,GAAG,WAAW,GAAG;EAAe;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAIf,CAAC;AAACnC,EAAA,CAtDEF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAwDhB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
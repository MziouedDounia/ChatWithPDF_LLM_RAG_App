{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dounia\\\\ChatWithPDF_LLM_RAG_App\\\\frontend\\\\src\\\\components\\\\BotMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BotMessage({\n  fetchMessage\n}) {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  useEffect(() => {\n    async function loadMessage() {\n      const msg = await fetchMessage();\n      setLoading(false);\n      setMessage(msg);\n    }\n    loadMessage();\n  }, [fetchMessage]);\n  useEffect(() => {\n    function updateVoices() {\n      const voices = window.speechSynthesis.getVoices();\n      console.log(voices, voices);\n      const targetVoice = voices.find(voice => voice.name === 'Microsoft David - English (United States)');\n      setSelectedVoice(targetVoice || null);\n    }\n\n    // Voices might not be available immediately, so listen for the event\n    window.speechSynthesis.onvoiceschanged = updateVoices;\n    updateVoices();\n    return () => {\n      window.speechSynthesis.onvoiceschanged = null;\n    };\n  }, []);\n  useEffect(() => {\n    if (!isLoading && message && selectedVoice) {\n      if (\"speechSynthesis\" in window) {\n        const utterance = new SpeechSynthesisUtterance(message);\n        utterance.voice = selectedVoice; // Set the selected voice\n        window.speechSynthesis.speak(utterance);\n      } else {\n        console.error(\"Speech synthesis not supported in this browser.\");\n      }\n    }\n  }, [isLoading, message, selectedVoice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-message\",\n      children: isLoading ? \"...\" : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(BotMessage, \"up+hHYpZkTpercNDJdTpPRpJzKw=\");\n_c = BotMessage;\nvar _c;\n$RefreshReg$(_c, \"BotMessage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotMessage","fetchMessage","_s","isLoading","setLoading","message","setMessage","selectedVoice","setSelectedVoice","loadMessage","msg","updateVoices","voices","window","speechSynthesis","getVoices","console","log","targetVoice","find","voice","name","onvoiceschanged","utterance","SpeechSynthesisUtterance","speak","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dounia/ChatWithPDF_LLM_RAG_App/frontend/src/components/BotMessage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function BotMessage({ fetchMessage }) {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadMessage() {\r\n      const msg = await fetchMessage();\r\n      setLoading(false);\r\n      setMessage(msg);\r\n    }\r\n    loadMessage();\r\n  }, [fetchMessage]);\r\n\r\n  useEffect(() => {\r\n    function updateVoices() {\r\n      const voices = window.speechSynthesis.getVoices();\r\n      console.log(voices,voices);\r\n      const targetVoice = voices.find(voice => voice.name === 'Microsoft David - English (United States)');\r\n      setSelectedVoice(targetVoice || null);\r\n    }\r\n    \r\n    // Voices might not be available immediately, so listen for the event\r\n    window.speechSynthesis.onvoiceschanged = updateVoices;\r\n    updateVoices();\r\n    \r\n    return () => {\r\n      window.speechSynthesis.onvoiceschanged = null;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading && message && selectedVoice) {\r\n      if (\"speechSynthesis\" in window) {\r\n        const utterance = new SpeechSynthesisUtterance(message);\r\n        utterance.voice = selectedVoice; // Set the selected voice\r\n        window.speechSynthesis.speak(utterance);\r\n      } else {\r\n        console.error(\"Speech synthesis not supported in this browser.\");\r\n      }\r\n    }\r\n  }, [isLoading, message, selectedVoice]);\r\n\r\n  return (\r\n    <div className=\"message-container\">\r\n      <div className=\"bot-message\">{isLoading ? \"...\" : message}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,eAAeY,WAAWA,CAAA,EAAG;MAC3B,MAAMC,GAAG,GAAG,MAAMT,YAAY,CAAC,CAAC;MAChCG,UAAU,CAAC,KAAK,CAAC;MACjBE,UAAU,CAACI,GAAG,CAAC;IACjB;IACAD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElBJ,SAAS,CAAC,MAAM;IACd,SAASc,YAAYA,CAAA,EAAG;MACtB,MAAMC,MAAM,GAAGC,MAAM,CAACC,eAAe,CAACC,SAAS,CAAC,CAAC;MACjDC,OAAO,CAACC,GAAG,CAACL,MAAM,EAACA,MAAM,CAAC;MAC1B,MAAMM,WAAW,GAAGN,MAAM,CAACO,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,2CAA2C,CAAC;MACpGb,gBAAgB,CAACU,WAAW,IAAI,IAAI,CAAC;IACvC;;IAEA;IACAL,MAAM,CAACC,eAAe,CAACQ,eAAe,GAAGX,YAAY;IACrDA,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACXE,MAAM,CAACC,eAAe,CAACQ,eAAe,GAAG,IAAI;IAC/C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,SAAS,IAAIE,OAAO,IAAIE,aAAa,EAAE;MAC1C,IAAI,iBAAiB,IAAIM,MAAM,EAAE;QAC/B,MAAMU,SAAS,GAAG,IAAIC,wBAAwB,CAACnB,OAAO,CAAC;QACvDkB,SAAS,CAACH,KAAK,GAAGb,aAAa,CAAC,CAAC;QACjCM,MAAM,CAACC,eAAe,CAACW,KAAK,CAACF,SAAS,CAAC;MACzC,CAAC,MAAM;QACLP,OAAO,CAACU,KAAK,CAAC,iDAAiD,CAAC;MAClE;IACF;EACF,CAAC,EAAE,CAACvB,SAAS,EAAEE,OAAO,EAAEE,aAAa,CAAC,CAAC;EAEvC,oBACER,OAAA;IAAK4B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC7B,OAAA;MAAK4B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEzB,SAAS,GAAG,KAAK,GAAGE;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV;AAAC9B,EAAA,CAhDuBF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
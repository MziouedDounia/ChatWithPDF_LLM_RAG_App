{"ast":null,"code":"// ChatbotAPI.js\nimport axios from 'axios';\n\n// Create an instance of axios with the base URL for the API\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000' // Replace with your actual API endpoint\n});\n\n// Function to get chatbot response\nexport const getChatbotResponse = async message => {\n  try {\n    const response = await api.post('/chat', {\n      message: message\n    }); // Adjust endpoint and payload as needed\n    return response.data.answer; // Adjust based on the response structure of your API\n  } catch (error) {\n    console.error(\"Error fetching chatbot response:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","getChatbotResponse","message","response","post","data","answer","error","console"],"sources":["C:/Users/Dounia/ChatWithPDF_LLM_RAG_App/frontend/src/ChatBotAPI.jsx"],"sourcesContent":["// ChatbotAPI.js\r\nimport axios from 'axios';\r\n\r\n// Create an instance of axios with the base URL for the API\r\nconst api = axios.create({\r\n  baseURL: 'http://127.0.0.1:8000', // Replace with your actual API endpoint\r\n});\r\n\r\n// Function to get chatbot response\r\nexport const getChatbotResponse = async (message) => {\r\n  try {\r\n    const response = await api.post('/chat',{message:message});// Adjust endpoint and payload as needed\r\n    return response.data.answer; // Adjust based on the response structure of your API\r\n  } catch (error) {\r\n    console.error(\"Error fetching chatbot response:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n  "],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAO,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,OAAO,EAAC;MAACF,OAAO,EAACA;IAAO,CAAC,CAAC,CAAC;IAC3D,OAAOC,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}